name: Build

on: [ push, pull_request ]

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-latest, ubuntu-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Required Build Toolchain
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib
          sudo apt-get install --no-install-recommends -y libopenjp2-tools

      - name: Install Wine
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable

      - name: Set NODE_OPTIONS
        run: export NODE_OPTIONS=--max-old-space-size=4096

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Compile Windows
        if: matrix.os == 'ubuntu-18.04'
        run: npm run ci-compile:win32
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Compile macOS
        if: matrix.os == 'macos-latest'
        run: npm run ci-compile:darwin
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Compile Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run ci-compile:linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: dist

#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          draft: true
#          files: "dist/**"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
