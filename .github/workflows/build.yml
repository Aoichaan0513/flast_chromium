name: Build

on: [ push ]

jobs:
  release-windows:
    name: Release (Windows)
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Compile
        run: npm run ci-compile:win32
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Release (Windows)
          path: dist

  release-darwin:
    name: Release (macOS)
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Compile
        run: npm run ci-compile:darwin
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Release (macOS)
          path: dist

  release-linux:
    name: Release (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Required Build Toolchain
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib
          sudo apt-get install --no-install-recommends -y libopenjp2-tools

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Compile
        run: npm run ci-compile:linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Release (Linux)
          path: dist
